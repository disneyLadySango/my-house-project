{"version":3,"sources":["components/atoms/Icon/Presenter.tsx","components/atoms/Icon/index.tsx","components/atoms/Icon/Icon.tsx","components/atoms/TypoGraphy/Presenter.tsx","components/atoms/TypoGraphy/index.tsx","components/atoms/TypoGraphy/TypoGraphy.tsx","components/molecules/RemoconButton/Presenter.tsx","components/molecules/RemoconButton/index.tsx","components/molecules/RemoconButton/RemoconButton.tsx","components/organisms/Remocon/Presenter.tsx","components/organisms/Remocon/Light/Presenter.tsx","components/organisms/Remocon/Light/Light.tsx","components/molecules/RemoconListItem/Presenter.tsx","components/molecules/RemoconListItem/RemoconListItem.tsx","components/organisms/RemoconList/Presenter.tsx","components/organisms/RemoconList/RemoconList.tsx","pages/RemoconPage/Presenter.tsx","lib/axios.ts","const/api/url.tsx","pages/RemoconPage/hooks.tsx","pages/RemoconPage/RemoconPage.tsx","serviceWorker.ts","index.tsx"],"names":["IconEnum","StyledContainer","styled","div","props","size","css","StyledIcon","img","Icon","src","process","image","TypoGraphyEnum","TypoGraphy","children","Title","ContentTitle","ItemText","Label","Text","bold","TITLE","CONTENT_TITLE","ITEM_TEXT","LABEL","text","RemoconButtonEnum","StyledRemoconButton","button","RemoconButton","onClick","StyledWrapper","TwoColumnRemoconButton","AtomsWrapper","StyledOneColumnContainer","OneColumnUpDownRemoconButton","StyledOneColumnAtomsWrapper","OneColumnAtomsWrapper","StyledOneColumnUpDownWrapper","OneColumnUpDownWrapper","ButtonText","type","DEFAULT_TWO","DEFAULT_THREE","UPDOWN","icon","typoGraphy","iconSize","CIRCLE_UP","CIRCLE_DOWN","StyledRemocon","ul","li","StyledLight","ParentPresenter","Light","ColumnContainer","StyledTwoColumnWrapper","TwoColumn","StyledOneColumnWrapper","OneColumnLightVolume","ICON_TYPES","POWER","LIGHT_MINI","REMOCON_BUTTON_TYPES","buttons","map","index","key","OneClumnLightVolumeRow","remoconButtons","useMemo","signals","signal","name","useCallback","event","preventDefault","id","createRemoconButtonProps","StyledRemoconListItem","RemoconListItem","StyledRemoconList","RemoconList","StyledListComponent","isActive","isName","nickname","str","indexOf","createRemoconList","data","model","LIGHT","AIRCON","PROJECTOR","SPEACKER","OTHER","setImage","apiFetchData","activeIndex","remoconList","onRemoconItemClick","remocon","StyledRemoconPage","RemoconPage","RemoconListWrapper","StyledErrorWrapper","ErrorPage","axios","LIST","url","method","API_KEY","window","location","search","replace","useState","setActiveIndex","setApiResult","isError","setError","isFirstSearch","setFirstSearch","fetchRemoData","a","URL","headers","accept","Authorization","result","status","console","log","useEffect","effect","Hooks","fetchDataState","errorText","length","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c3c7a6a4.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst StyledContainer = styled.div<{ size: number }>`\n  margin: 0 auto;\n  ${props => \n    props.size &&\n      css`\n        width: ${props.size}px;\n        height: ${props.size}px;\n      `\n  }\n`\nconst StyledIcon = styled.img`\n  width: 100%;\n  height: auto;\n`\ntype IconProps = {\n  image: string\n  size: number\n}\nexport const Icon: React.FC<IconProps> = props => (\n  <StyledContainer size={props.size}>\n    <StyledIcon src={`${process.env.PUBLIC_URL}/icon/${props.image}.svg`} />\n  </StyledContainer>\n)\n","export { default } from './Icon'\n\nexport enum IconEnum {\n  PROJECTOR = 'projector',\n  AIRCON = 'aircon',\n  SPEACKER = 'speacker',\n  LIGHT = 'light',\n  POWER = 'power',\n  LIGHT_MINI = 'light_mini',\n  CIRCLE_UP = 'circle_up',\n  CIRCLE_DOWN = 'circle_down',\n  OTHER = 'light'\n}\n","import React from 'react'\n\nimport * as Presenter from './Presenter'\nimport * as Type from './type'\n\nconst Icon: React.FC<Type.Props> = props =>\n  <Presenter.Icon size={props.size} image={props.image} />\n\nexport default Icon\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ntype TypoGraphyProps = {\n  size: number\n}\nconst StyledContainer = styled.div<TypoGraphyProps>`\n  line-height: 1.35;\n  margin: 0;\n  ${props =>\n    props.size &&\n      css`\n        font-size: ${props.size}px;\n      `\n  }\n`\nexport const TypoGraphy: React.FC<TypoGraphyProps> = props => \n  <StyledContainer size={props.size}>{props.children}</StyledContainer>\n\nexport const Title: React.FC = props => <h2>{props.children}</h2>\n\nexport const ContentTitle: React.FC = props => <h3>{props.children}</h3>\n\nexport const ItemText: React.FC = props => <h5>{props.children}</h5>\n\nexport const Label: React.FC = props => <label>{props.children}</label>\n","export { default } from './TypoGraphy'\n\nexport enum TypoGraphyEnum {\n  TITLE,\n  CONTENT_TITLE,\n  ITEM_TEXT,\n  LABEL\n}\n","import React from 'react'\n\nimport { TypoGraphyEnum } from '.'\nimport * as Presenter from './Presenter'\nimport * as Type from './type'\n\nconst Text: React.FC<{ bold: TypoGraphyEnum}> = (props) => {\n  switch (props.bold) {\n    case TypoGraphyEnum.TITLE:\n      return <Presenter.Title>{props.children}</Presenter.Title>\n    case TypoGraphyEnum.CONTENT_TITLE:\n      return <Presenter.ContentTitle>{props.children}</Presenter.ContentTitle>\n    case TypoGraphyEnum.ITEM_TEXT:\n      return <Presenter.ItemText>{props.children}</Presenter.ItemText>\n    case TypoGraphyEnum.LABEL:\n    default:\n      return <Presenter.Label>{props.children}</Presenter.Label>\n  }\n}\n\nconst TypoGraphy: React.FC<Type.Props> = props => {\n  return (\n    <Presenter.TypoGraphy size={props.size}>\n      <Text bold={props.bold}>\n        {props.text}\n      </Text>\n    </Presenter.TypoGraphy>\n  )\n}\n\nexport default TypoGraphy\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledRemoconButton = styled.button`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  border: 0px;\n  text-align: center;\n  background-color: #FFF;\n`\ntype RemoconButtonProps = {\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\nexport const RemoconButton: React.FC<RemoconButtonProps> = props => (\n  <StyledRemoconButton onClick={props.onClick}>\n    {props.children}\n  </StyledRemoconButton>\n)\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  margin: 10px auto 0;\n`\nexport const TwoColumnRemoconButton: React.FC = props => (\n  <StyledWrapper>\n    {props.children}\n  </StyledWrapper>\n)\nexport const AtomsWrapper: React.FC = TwoColumnRemoconButton\n\n\nconst StyledOneColumnContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`\nexport const OneColumnUpDownRemoconButton: React.FC = props => (\n  <StyledOneColumnContainer>\n    {props.children}\n  </StyledOneColumnContainer>\n)\n\nconst StyledOneColumnAtomsWrapper = styled.div`\n  width: 100%;\n  padding: 10px;\n  margin: auto 0;\n  display: flex;\n  flex-direction: column;\n  text-align: right;\n`\nexport const OneColumnAtomsWrapper: React.FC = props => (\n  <StyledOneColumnAtomsWrapper>\n    {props.children}\n  </StyledOneColumnAtomsWrapper>\n)\n\nconst StyledOneColumnUpDownWrapper = styled.div`\n  width: 100%;\n  margin: 5px auto;\n`\nexport const OneColumnUpDownWrapper: React.FC = props => (\n  <StyledOneColumnUpDownWrapper>\n    {props.children}\n  </StyledOneColumnUpDownWrapper>\n)\n","export { default } from './RemoconButton'\n\nexport enum RemoconButtonEnum {\n  DEFAULT_TWO,\n  DEFAULT_THREE,\n  UPDOWN,\n}\n","import React from 'react'\n\nimport Icon, { IconEnum } from '../../atoms/Icon'\nimport TypoGraphy from '../../atoms/TypoGraphy'\n\nimport { RemoconButtonEnum } from '.'\nimport * as Presenter from './Presenter'\nimport * as Type from './type'\n\nconst ButtonText : React.FC<Type.Props> = props => {\n  switch(props.type) {\n    case RemoconButtonEnum.DEFAULT_TWO:\n      return <TwoColumnRemoconButton {...props} />\n    \n    case RemoconButtonEnum.DEFAULT_THREE:\n      return <h1>THREE</h1>\n\n    case RemoconButtonEnum.UPDOWN:\n      return <OneColumnUpDownRemoconButton {...props} />\n\n    default:\n      return <TwoColumnRemoconButton {...props} />\n  }\n}\n\nconst TwoColumnRemoconButton: React.FC<Type.TwoColumnRemoconButtonProps> = props => {\n  return (\n    <Presenter.TwoColumnRemoconButton>\n      <Presenter.AtomsWrapper>\n        <Icon {...props.icon} />\n      </Presenter.AtomsWrapper>\n      <Presenter.AtomsWrapper>\n        <TypoGraphy {...props.typoGraphy} />\n      </Presenter.AtomsWrapper>\n    </Presenter.TwoColumnRemoconButton>\n  )\n}\n\nconst OneColumnUpDownRemoconButton: React.FC<Type.OneColumnUpDownRemoconButtonProps> = props => {\n  return (\n    <Presenter.OneColumnUpDownRemoconButton>\n      <Presenter.OneColumnAtomsWrapper>\n        <TypoGraphy {...props.typoGraphy} />\n      </Presenter.OneColumnAtomsWrapper>\n      <Presenter.OneColumnAtomsWrapper>\n        <Presenter.OneColumnUpDownWrapper>\n          <Icon size={props.iconSize} image={IconEnum.CIRCLE_UP} />\n        </Presenter.OneColumnUpDownWrapper>\n        <Presenter.OneColumnUpDownWrapper>\n          <Icon size={props.iconSize} image={IconEnum.CIRCLE_DOWN} />\n        </Presenter.OneColumnUpDownWrapper>\n      </Presenter.OneColumnAtomsWrapper>\n    </Presenter.OneColumnUpDownRemoconButton>\n  )\n}\n\nconst RemoconButton: React.FC<Type.Props> = props => {\n  return (\n    <Presenter.RemoconButton onClick={props.onClick}>\n      <ButtonText {...props} />\n    </Presenter.RemoconButton>\n  )\n}\n\nexport default RemoconButton\n","import styled from 'styled-components'\n\nexport const StyledRemocon = styled.div`\n  width: 100%;\n  margin: 10px;\n  padding: 5px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nexport const StyledContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin: 5px 0;\n`\n\nexport const StyledWrapper = styled.li`\n  margin: 3px 5px;\n  background-color: #FFF;\n  border: 1px solid #C5C5C5;\n  border-radius: 6px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport * as ParentPresenter from '../Presenter'\n\nconst StyledLight = styled(ParentPresenter.StyledRemocon)`\n  background-color: #FFF59D;\n`\nexport const Light: React.FC = props => (\n  <StyledLight>{props.children}</StyledLight>\n)\n\nexport const ColumnContainer: React.FC = props => (\n  <ParentPresenter.StyledContainer>\n    {props.children}\n  </ParentPresenter.StyledContainer>\n)\n\nconst StyledTwoColumnWrapper = styled(ParentPresenter.StyledWrapper)`\n  width: calc(100% / 2);\n`\nexport const TwoColumn: React.FC = props => (\n  <StyledTwoColumnWrapper>\n    {props.children}\n  </StyledTwoColumnWrapper>\n)\n\nconst StyledOneColumnWrapper = styled(ParentPresenter.StyledWrapper)`\n  width: 100%;\n`\nexport const OneColumnLightVolume: React.FC= props => (\n  <StyledOneColumnWrapper>\n    {props.children}\n  </StyledOneColumnWrapper>\n)\n","import React, { useMemo, useCallback } from 'react'\nimport { IconEnum } from '../../../atoms/Icon'\nimport { TypoGraphyEnum } from '../../../atoms/TypoGraphy'\nimport RemoconButton, { RemoconButtonEnum } from '../../../molecules/RemoconButton'\n\nimport * as Presenter from './Presenter'\nimport * as Type from './type'\n\nconst ICON_TYPES = [\n  IconEnum.POWER,\n  IconEnum.LIGHT_MINI,\n  IconEnum.CIRCLE_UP,\n  IconEnum.CIRCLE_DOWN,\n]\n\nconst REMOCON_BUTTON_TYPES = [ \n  RemoconButtonEnum.DEFAULT_TWO,\n  RemoconButtonEnum.DEFAULT_TWO,\n  RemoconButtonEnum.UPDOWN,\n  RemoconButtonEnum.UPDOWN,\n]\n\nconst createRemoconButtonProps = (props: Type.Props) => (\n  props.signals.map((signal, index) => (\n    {\n      type: REMOCON_BUTTON_TYPES[index],\n      iconSize: 30,\n      icon: {\n        image: ICON_TYPES[index],\n        size: 50,\n      },\n      typoGraphy: {\n        size: 30,\n        text: signal.name,\n        bold: TypoGraphyEnum.ITEM_TEXT,\n      },\n      onClick: useCallback((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        event.preventDefault()\n        props.onClick(signal.id)\n      }, [signal.id]),\n    }\n  ))\n)\n\nconst TwoColumn: React.FC<{ buttons: Array<Type.ColumnProps> }> = props => {\n  return (\n    <Presenter.ColumnContainer>\n      {props.buttons.map((button, index) => (\n        <Presenter.TwoColumn key={`remocon-button-twocolumn-${index}`}>\n          <RemoconButton {...button} />\n        </Presenter.TwoColumn>\n      ))}\n    </Presenter.ColumnContainer>\n  )\n}\n\nconst OneClumnLightVolumeRow: React.FC<Type.ColumnProps> = props => {\n  return (\n    <Presenter.ColumnContainer>\n      <Presenter.OneColumnLightVolume>\n        <RemoconButton {...props} />\n      </Presenter.OneColumnLightVolume>\n    </Presenter.ColumnContainer>\n  )\n}\n\nconst Light: React.FC<Type.Props> = props => {\n  const remoconButtons = useMemo(\n    () => createRemoconButtonProps(props)\n  , [props])\n  \n  remoconButtons[2].typoGraphy.text = '光量'\n  return (\n    <Presenter.Light>\n      <TwoColumn buttons={[ remoconButtons[0], remoconButtons[1] ]} />\n      <OneClumnLightVolumeRow {...remoconButtons[2]} />\n    </Presenter.Light>\n  )\n}\n\nexport default Light\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledRemoconListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  max-width: 100%;\n`\nexport const RemoconListItem: React.FC = props => (\n  <StyledRemoconListItem>\n    {props.children}\n  </StyledRemoconListItem>\n)\n\nconst StyledWrapper = styled.div`\n  margin: 5px auto 0;\n`\nexport const AtomsWrapper: React.FC = props => (\n  <StyledWrapper>\n    {props.children}\n  </StyledWrapper>\n)\n","import React from 'react'\n\nimport Icon from '../../atoms/Icon'\nimport TypoGraphy from '../../atoms/TypoGraphy'\n\nimport * as Presenter from './Presenter'\nimport * as Type from './type'\n\nconst RemoconListItem: React.FC<Type.Props> = props => {\n  return (\n    <Presenter.RemoconListItem>\n      <Presenter.AtomsWrapper>\n        <Icon {...props.icon} />\n      </Presenter.AtomsWrapper>\n      <Presenter.AtomsWrapper>\n        <TypoGraphy {...props.typoGraphy} />\n      </Presenter.AtomsWrapper>\n    </Presenter.RemoconListItem>\n  )\n}\n\nexport default RemoconListItem\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst StyledRemoconList = styled.ul`\n  display: flex;\n  overflow-x: auto;\n  margin: 0;\n  padding: 0;\n`\nexport const RemoconList: React.FC = props => (\n  <StyledRemoconList>{props.children}</StyledRemoconList>\n)\n\nconst StyledListComponent = styled.li<{ isActive: boolean }>`\n  display: inline-block;\n  min-width: 20%;\n  padding: 10px 20px 30px;\n  opacity: 0.5;\n  cursor: pointer;\n  :hover {\n    opacity: 0.7;\n  }\n  ${props => props.isActive && css`\n      opacity: 1;\n      border-bottom: 10px solid #555555;\n      :hover {\n        opacity: 1;\n      }\n    `\n  }\n`\ntype RemoconListItem = {\n  isActive: boolean\n  onClick: () => void\n}\nexport const RemoconListItem: React.FC<RemoconListItem> = props => (\n  <StyledListComponent isActive={props.isActive} onClick={props.onClick}>\n    {props.children}\n  </StyledListComponent>\n)\n","import React, { useMemo, useCallback } from 'react'\n\nimport { IconEnum } from '../../atoms/Icon'\nimport { TypoGraphyEnum } from '../../atoms/TypoGraphy'\nimport RemoconListItem from '../../molecules/RemoconListItem'\n\nimport * as Presenter from './Presenter'\nimport * as Type from './type'\n\nconst isName = (nickname: string, str: string) => nickname.indexOf(str) !== -1\n\nconst setImage = (nickname: string): IconEnum => {\n  if (isName(nickname, '照明')) return IconEnum.LIGHT\n  if (isName(nickname, 'エアコン')) return IconEnum.AIRCON\n  if (isName(nickname, 'プロジェクタ')) return IconEnum.PROJECTOR\n  if (isName(nickname, 'スピーカー')) return IconEnum.SPEACKER\n  return IconEnum.OTHER\n}\n\nconst createRemoconList = (data: Type.ApiFetchData) => {\n  return data.map((model) => {\n    const { nickname } = model\n    const image = setImage(nickname)\n    return {\n      icon: {\n        size: 36,\n        image,\n      },\n      typoGraphy: {\n        size: 12,\n        bold: TypoGraphyEnum.LABEL,\n        text: model.nickname\n      } \n    }\n  })\n}\n\nconst RemoconList: React.FC<Type.Props> = props => {\n  const { apiFetchData, activeIndex, onClick } = props\n\n  const remoconList = useMemo(\n    () => createRemoconList(apiFetchData)\n  , [apiFetchData])\n\n  const onRemoconItemClick = useCallback((index: number, isActive: boolean) => {\n    if (isActive) return\n    onClick(index)\n  }, [])\n\n  return (\n    <Presenter.RemoconList>\n      {remoconList.map((remocon, index) => {\n        const isActive = index === activeIndex\n\n        return (\n          <Presenter.RemoconListItem\n            key={`remocon_list_item_${index}`}\n            isActive={isActive}\n            onClick={() => onRemoconItemClick(index, isActive)}\n          >\n            <RemoconListItem {...remocon} />\n          </Presenter.RemoconListItem>\n        )\n      })}\n    </Presenter.RemoconList>\n  )\n}\n\nexport default RemoconList\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport TypoGraphy, { TypoGraphyEnum } from '../../components/atoms/TypoGraphy'\n\nconst StyledRemoconPage = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\nexport const RemoconPage: React.FC = props => (\n  <StyledRemoconPage>\n    {props.children}\n  </StyledRemoconPage>\n)\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n`\nexport const RemoconListWrapper: React.FC = props => (\n  <StyledWrapper>\n    {props.children}\n  </StyledWrapper>\n)\n\nconst StyledErrorWrapper = styled.div`\n  width: 100%;\n  color: #F50057;\n  text-align: center;\n`\nexport const ErrorPage: React.FC<{ text: string }> = (props) => (\n  <StyledRemoconPage>\n    <StyledErrorWrapper>\n      <TypoGraphy size={48} bold={TypoGraphyEnum.TITLE} text={props.text} />\n    </StyledErrorWrapper>\n  </StyledRemoconPage>\n)\n","// Wrapper\nimport axios from 'axios'\n\nexport default axios\n","// eslint-disable-next-line no-template-curly-in-string\nexport const SEND = 'https://api.nature.global/1/signals/${param}/send' as const\nexport const LIST = {\n  url: 'https://api.nature.global/1/appliances',\n  method: 'GET'\n} as const\n","import React, { useState, useEffect } from 'react'\n\nimport axios from '../../lib/axios'\n\nimport * as URL from '../../const/api/url'\nimport * as Type from './type'\n\nconst API_KEY = window.location.search.replace('?key=', '')\n\nexport const useFetchData = () => {\n  const [ apiFetchData, setApiResult ] = useState<Type.NatureRemoFetchData>([])\n  const [ isError, setError ] = useState<boolean>(false)\n  const [ isFirstSearch, setFirstSearch ] = useState<boolean>(false)\n\n  const fetchRemoData = async () => {\n    const result = await axios({\n      ...URL.LIST,\n      headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${API_KEY}`\n      }\n    })\n    if (result.status !== 200) {\n      setError(true)\n      setFirstSearch(true)\n      return\n    }\n    setApiResult(result.data)\n    console.log(result.data)\n    setFirstSearch(true)\n  }\n  useEffect(() => {\n    const effect = async () => {\n      await fetchRemoData()\n    }\n    effect()\n  }, [])\n\n  const fetchDataState = { apiFetchData, isError, isFirstSearch }\n\n  return [ fetchDataState,  fetchRemoData ] as const\n}\n","import React, { useState } from 'react'\n\nimport Light from '../../components/organisms/Remocon/Light'\nimport RemoconList from '../../components/organisms/RemoconList'\n\nimport * as Presenter from './Presenter'\nimport * as Hooks from './hooks'\n\nconst API_KEY = window.location.search.replace('?key=', '')\n\nconst RemoconPage: React.FC = () => {\n  const [ activeIndex, setActiveIndex ] = useState<number>(0)\n\n  const [ fetchDataState ] = Hooks.useFetchData()\n\n  const { apiFetchData, isError, isFirstSearch } = fetchDataState\n\n  if (!isFirstSearch) return <Presenter.ErrorPage text={''} />\n\n  const errorText = isError ? 'エラーが発生しました。時間を置いて再度ページを更新してください。'\n    : !API_KEY ? 'GETパラメータにAPIKEYが設定されていません。keyにAPIKEYを設定してください。'\n    : apiFetchData.length === 0 ? 'データがないか、APIKEYが誤っています。' : null\n\n  if (errorText && isFirstSearch) return <Presenter.ErrorPage text={errorText} />\n\n  if (apiFetchData && activeIndex) {\n  }\n  const signals = apiFetchData[0]['signals'] || null\n  return (\n    <Presenter.RemoconPage>\n      <Presenter.RemoconListWrapper>\n        <RemoconList \n          apiFetchData={apiFetchData}\n          activeIndex={activeIndex}\n          onClick={setActiveIndex}\n        />\n      </Presenter.RemoconListWrapper>\n      {signals &&\n        <Light \n          signals={signals} onClick={(id: string) => console.log(id)}\n        />\n      }\n    </Presenter.RemoconPage>\n  )\n}\n\nexport default RemoconPage\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RemoconPage from './pages/RemoconPage'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RemoconPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}